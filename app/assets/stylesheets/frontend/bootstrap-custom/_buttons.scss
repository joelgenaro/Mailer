// Important Notes:
//
// This file has been modified to use $button-colors instead
// of $theme-colors so we can have different colored buttons without
// affecting the primary colors of everything else.

// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  @include hover() {
    color: $body-color;
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled) {
    cursor: if($enable-pointer-cursor-for-buttons, pointer, null);

    &:active,
    &.active {
      @include box-shadow($btn-active-box-shadow);

      &:focus {
        @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
      }
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $button-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);
  }
}

@each $color, $value in $button-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  text-decoration: $link-decoration;

  @include hover() {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

// Extra bits pulled from old theme
.btn {
  font-weight: 500; }
  .btn > i.float-left, .btn > i.float-right {
    line-height: inherit;
    margin: 0; }
  .btn > i svg {
    max-width: 16px;
    max-height: 16px;
    vertical-align: middle; }
  .btn.loading {
    text-indent: -9999rem; }
  .btn-link:hover, .btn-link:active {
    box-shadow: none; }

.btn-md {
  padding: 0.75rem 1.25rem; }

.btn-white {
  color: #647787;
  background-color: #fff;
  border-color: rgba(135, 150, 165, 0.1); }

.btn-rounded {
  border-radius: 4rem;
  padding-left: 1rem;
  padding-right: 1rem; }
  .btn-rounded.btn-xs {
    padding-left: 0.8rem;
    padding-right: 0.8rem; }

.btn-icon {
  text-align: center;
  width: 2.125rem;
  height: 2.125rem;
  padding: 0 !important;
  position: relative; }
  .btn-icon span {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center; }
  .btn-icon.btn-sm {
    width: 1.75rem;
    height: 1.75rem; }
  .btn-icon.btn-md {
    width: 2.5rem;
    height: 2.5rem; }
  .btn-icon.btn-lg {
    width: 3.375rem;
    height: 3.375rem; }

.btn-line {
  position: relative; }
  .btn-line:after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    display: block;
    height: 1px;
    width: 100%;
    background: #000;
    transition: transform 0.8s cubic-bezier(0.9, 0, 0.1, 1);
    transform-origin: right center;
    transform: scaleX(0); }
  .btn-line:hover:after, .btn-line:active:after {
    transform-origin: left center;
    transform: scaleX(1); }

.btn-wave {
  overflow: hidden;
  position: relative;
  transform: translate3d(0, 0, 0); }
  .btn-wave:before {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: auto;
    height: auto;
    pointer-events: none;
    background-image: radial-gradient(circle, #000 10%, transparent 10.01%);
    background-repeat: no-repeat;
    background-position: 50%;
    transform: scale(10, 10);
    opacity: 0;
    transition: transform .5s, opacity 1.5s; }
  .btn-wave:active:before {
    transform: scale(0, 0);
    opacity: .1;
    transition: 0s; }

.btn-raised {
  transition: box-shadow 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26); }
  .btn-raised:not([disabled]):hover, .btn-raised:not([disabled]):focus, .btn-raised:not([disabled]):active {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.4);
    transform: translate3d(0, -1px, 0); }

.btn-white {
  color: $color__grey-700 !important;
  border-color: transparent !important;
}

.btn-outline {
  color: $color__grey-700 !important;
  background-color: transparent !important;
  border-color: $color__grey-100 !important;
}
