export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: any;
};

/** A VA task */
export type IAssistantTask = {
  __typename?: 'AssistantTask';
  id: Scalars['ID'];
  label: Scalars['String'];
  state: Scalars['String'];
  userId: Scalars['ID'];
};


/** A Mail Inbox */
export type IMailInbox = {
  __typename?: 'MailInbox';
  autoOpenMail: Scalars['Boolean'];
  autoPayBills: Scalars['Boolean'];
  autoPayLimitAmount: Scalars['Int'];
  autoPayLimitIsUnlimited: Scalars['Boolean'];
  creditBalanceMailContentScan: Scalars['Int'];
  creditBalanceMailTranslationSummary: Scalars['Int'];
  id: Scalars['ID'];
  user: IUser;
};

/** A Mail Recipient */
export type IMailRecipient = {
  __typename?: 'MailRecipient';
  addressEn: Scalars['String'];
  addressJp: Scalars['String'];
  id: Scalars['ID'];
  inbox: IMailInbox;
  name: Scalars['String'];
};

export type IMutation = {
  __typename?: 'Mutation';
  /** Sends an email requesting for additional time */
  sendAdditionalTimeEmail?: Maybe<ISendAdditionalTimeEmailMutationPayload>;
};


export type IMutationSendAdditionalTimeEmailArgs = {
  input: ISendAdditionalTimeEmailMutationInput;
};

/** A user's profile */
export type IProfile = {
  __typename?: 'Profile';
  displayName?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  lastName?: Maybe<Scalars['String']>;
  userId: Scalars['ID'];
};

export type IQuery = {
  __typename?: 'Query';
  /** Users VA tasks */
  assistantTasks: Array<IAssistantTask>;
  /** Mail Recipients */
  mailRecipients: Array<IMailRecipient>;
  /** Users */
  users: Array<IUser>;
};


export type IQueryAssistantTasksArgs = {
  userId?: Maybe<Scalars['ID']>;
  stateIn?: Maybe<Array<Scalars['String']>>;
};


export type IQueryMailRecipientsArgs = {
  idEq?: Maybe<Scalars['ID']>;
};


export type IQueryUsersArgs = {
  idEq?: Maybe<Scalars['ID']>;
  profileDisplayNameCont?: Maybe<Scalars['String']>;
};

/** Autogenerated input type of SendAdditionalTimeEmailMutation */
export type ISendAdditionalTimeEmailMutationInput = {
  assistantTaskId: Scalars['ID'];
  timeRequired: Scalars['Int'];
  costPerMinute: Scalars['Int'];
  message: Scalars['String'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
};

/** Autogenerated return type of SendAdditionalTimeEmailMutation */
export type ISendAdditionalTimeEmailMutationPayload = {
  __typename?: 'SendAdditionalTimeEmailMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']>;
  errorMessage?: Maybe<Scalars['String']>;
  success: Scalars['Boolean'];
};

/** A subscription belonging to a user */
export type ISubscription = {
  __typename?: 'Subscription';
  billingPeriodEndsAt?: Maybe<Scalars['ISO8601DateTime']>;
  billingPeriodStartedAt?: Maybe<Scalars['ISO8601DateTime']>;
  billingStartedAt?: Maybe<Scalars['ISO8601DateTime']>;
  id: Scalars['ID'];
  plan?: Maybe<Scalars['String']>;
  planType?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  stripeSubscriptionId?: Maybe<Scalars['String']>;
  userId: Scalars['ID'];
};

/** A user */
export type IUser = {
  __typename?: 'User';
  email: Scalars['String'];
  id: Scalars['ID'];
  profile?: Maybe<IProfile>;
  subscriptions?: Maybe<Array<ISubscription>>;
};
